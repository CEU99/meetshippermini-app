{
  "permissions": {
    "allow": [
      "Bash(npx create-next-app@latest:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(npm run build:*)",
      "Bash(for file in app/api/dev/session/route.ts app/api/matches/[id]/complete/route.ts app/api/matches/[id]/regenerate-link/route.ts app/api/matches/[id]/respond/route.ts app/api/matches/[id]/schedule/route.ts app/api/matches/auto-run/route.ts app/api/matches/manual/route.ts app/api/users/[fid]/route.ts app/api/users/route.ts app/api/profile/route.ts app/api/migrate/user-code/route.ts)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(find:*)",
      "Bash(for file in \"app/api/dev/session/route.ts\" \"app/api/matches/[id]/complete/route.ts\" \"app/api/matches/[id]/regenerate-link/route.ts\" \"app/api/matches/[id]/respond/route.ts\" \"app/api/matches/[id]/schedule/route.ts\" \"app/api/matches/auto-run/route.ts\" \"app/api/users/[fid]/route.ts\" \"app/api/users/route.ts\")",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(if [ -f \"$file.bak\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Bash(pnpm run build:*)",
      "Bash(git checkout app/**/*.tsx components/**/*.tsx)",
      "Bash(pnpm lint:*)",
      "Bash(git checkout:*)",
      "Bash(node scripts/diagnose-env.js:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pnpm run dev)",
      "Bash(node:*)",
      "Bash(psql:*)",
      "Bash(if [ -z \"$DATABASE_URL\" ])",
      "Bash(then echo \"ERROR: DATABASE_URL not set. Please run: export DATABASE_URL=''your_supabase_connection_string''\")",
      "Bash(exit 1)",
      "Bash(if [ -f .env.local ])",
      "Bash(then grep -E \"(DATABASE_URL|SUPABASE)\" .env.local)",
      "Bash(elif [ -f .env ])",
      "Bash(then grep -E \"(DATABASE_URL|SUPABASE)\" .env)",
      "Bash(else echo \"No .env file found\")",
      "Bash(then grep \"DATABASE_URL\" .env.local)",
      "Bash(then grep \"DATABASE_URL\" .env)",
      "Bash(touch:*)",
      "Bash(npx tsx:*)",
      "Bash(pnpm add:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(pnpm install)",
      "Bash(git push:*)"
    ],
    "deny": [],
    "ask": []
  }
}
